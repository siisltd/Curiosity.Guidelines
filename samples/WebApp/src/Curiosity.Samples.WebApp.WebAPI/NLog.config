<?xml version="1.0" encoding="utf-8"?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"
      keepVariablesOnReload="true">

    <extensions>
        <add assembly="NLog.MailKit" />
    </extensions>

    <!-- значения в эти переменные выставляются в коде -->
    <!-- тут они объявляются -->
    <variable name="outputdir" value="" />
    <variable name="appname" value="" />
    <variable name="mailto" value="max.markelow@gmail.com" />
    <variable name="mailfrom" value="pechkin@notify.siisltd.ru" />
    <variable name="smtplogin" value="pechkin" />
    <variable name="smtppassword" value="" />
    <variable name="smtpserver" value="notify.siisltd.ru" />

    <variable name="filelayout" value="${longdate} [${logger:shortName=true}] ${level:upperCase=true:padding=-5} ${when:when=length('${aspnet-traceidentifier}') > 0:inner=${aspnet-traceidentifier} :else=}${message}${onexception:${newline}${exception:format=tostring}}" />
    <variable name="consolelayout" value="${longdate} ${level:upperCase=true:padding=-5} ${message}${onexception:${newline}${exception:format=tostring}}" />

    <targets async="true">
        <target xsi:type="Console"
                name="console"
                layout="${var:consolelayout}"
                detectConsoleAvailable="true" />

        <target name="loggerFile"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/main.log"
                archiveFileName="${var:outputdir}/archive/main{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />

        <target name="errorsFile"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/errors.log"
                archiveFileName="${var:outputdir}/archive/errors_{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />

        <target name="warningsFile"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/warnings.log"
                archiveFileName="${var:outputdir}/archive/warnings_{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />

        <target name="antiforgeryFile"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/antiforgery.log"
                archiveFileName="${var:outputdir}/archive/antiforgery_{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />

        <target name="traceFile"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/trace.log"
                archiveFileName="${var:outputdir}/archive/trace_{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />

        <target name="performanceWebFile"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/performance_web.log"
                archiveFileName="${var:outputdir}/archive/performance_web{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />

        <target name="microsoft"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/microsoft.log"
                archiveFileName="${var:outputdir}/archive/microsoft_{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />

        <target name="system"
                xsi:type="File"
                layout="${var:filelayout}"
                fileName="${var:outputdir}/system.log"
                archiveFileName="${var:outputdir}/archive/system_{#}.zip"
                archiveEvery="Day"
                archiveNumbering="Date"
                enableArchiveFileCompression="true"
                maxArchiveFiles="30"
                createDirs="true" />


        <target name="blackHole"
                xsi:type="Null" />

        <!-- Почтовые таргеты -->
        <target name="mailLimitied"
                xsi:type="LimitingWrapper"
                messageLimit="10"
                interval="00:01">
            <target name="mail"
                    xsi:type="Mail"
                    html="true"
                    addNewLines="true"
                    replaceNewlineWithBrTagInHtml="true"
                    encoding="UTF-8"
                    subject="Ошибка в ${var:appname} (${environment:ASPNETCORE_ENVIRONMENT})"
                    to="${var:mailto}"
                    from="${var:appname} &lt;${var:mailfrom}&gt;"
                    smtpUserName="${var:smtplogin}"
                    smtpPassword="${var:smtppassword}"
                    smtpServer="${var:smtpserver}"
                    smtpPort="465"
                    smtpAuthentication="Basic"
                    timeout="10000"
                    enableSsl="true"
                    header="${message}${newline}"
                    body="${longdate} ${logger:shortName=true} ${level:upperCase=true} ${message}${onexception:${newline}${exception:format=tostring}} ${newline}"
                    footer="Сервер: ${machinename}${newline}${newline}PID: ${processid}${newline}" />
        </target>

        <target name="startMail"
                xsi:type="Mail"
                html="true"
                addNewLines="true"
                replaceNewlineWithBrTagInHtml="true"
                encoding="UTF-8"
                subject="Запущен ${var:appname} (${environment:ASPNETCORE_ENVIRONMENT})"
                to="${var:mailto}"
                from="${var:appname} &lt;${var:mailfrom}&gt;"
                smtpUserName="${var:smtplogin}"
                smtpPassword="${var:smtppassword}"
                smtpServer="${var:smtpserver}"
                smtpPort="465"
                smtpAuthentication="Basic"
                timeout="10000"
                enableSsl="true"
                header="${var:appname} запущен со словами:${newline}"
                body="${message} ${newline}${newline}Время запуска: ${longdate}. ${newline} Окружение: ${environment:ASPNETCORE_ENVIRONMENT} ${newline}"
                footer="Сервер: ${machinename}${newline}${newline}PID: ${processid}${newline}" />

        <target name="stopMail"
                xsi:type="Mail"
                html="true"
                addNewLines="true"
                replaceNewlineWithBrTagInHtml="true"
                encoding="UTF-8"
                subject="Остановлен ${var:appname} (${environment:ASPNETCORE_ENVIRONMENT})"
                to="${var:mailto}"
                from="${var:appname} &lt;${var:mailfrom}&gt;"
                smtpUserName="${var:smtplogin}"
                smtpPassword="${var:smtppassword}"
                smtpServer="${var:smtpserver}"
                smtpPort="465"
                smtpAuthentication="Basic"
                timeout="10000"
                enableSsl="true"
                header="${var:appname} остановлен со словами:${newline}"
                body="${message} ${newline}${newline}Время остановки: ${longdate}. ${newline} Окружение: ${environment:ASPNETCORE_ENVIRONMENT} ${newline}"
                footer="Сервер: ${machinename}${newline}${newline}PID: ${processid}${newline}" />
    </targets>

    <rules>
        <!--
        <logger name="Microsoft.EntityFrameworkCore.*" levels="Info" writeTo="console" final="true" />
        -->

        <logger name="*.AspNetCore.SignalR.*" level="Error" writeTo="warningsFile" final="true"/>

        <logger name="Microsoft.*" levels="Trace,Debug" writeTo="blackHole" final="true" />
        <logger name="Microsoft.*" minLevel="Info" maxLevel="Warn" writeTo="microsoft" final="true" />

        <logger name="System.*" levels="Trace,Debug" writeTo="blackHole" final="true" />
        <logger name="System.*" minLevel="Info" maxLevel="Warn" writeTo="system" final="true" />

        <logger name="*DefaultAntiforgery" writeTo="antiforgeryFile" final="true" />

        <logger name="appStartEmailLog" level="Info" writeTo="startMail" final="true" >
            <filters defaultAction="Log">
                <when condition="equals('${environment:ASPNETCORE_ENVIRONMENT}', 'Development')" action="Ignore" />
                <when condition="equals('${environment:ASPNETCORE_ENVIRONMENT}', 'Staging')" action="Ignore" />
            </filters>
        </logger>

        <logger name="appStopEmailLog" level="Info" writeTo="stopMail" final="true" >
            <filters defaultAction="Log">
                <when condition="equals('${environment:ASPNETCORE_ENVIRONMENT}', 'Development')" action="Ignore" />
                <when condition="equals('${environment:ASPNETCORE_ENVIRONMENT}', 'Staging')" action="Ignore" />
            </filters>
        </logger>

        <logger name="*" levels="Error,Fatal" writeTo="mailLimitied">
            <filters defaultAction="Log">
                <when condition="equals('${environment:ASPNETCORE_ENVIRONMENT}', 'Development')" action="Ignore" />
            </filters>
        </logger>

        <logger name="performanceWeb" minLevel="Trace" writeTo="performanceWebFile" final="true" />

        <logger name="*" level="Trace" writeTo="blackHole" final="true" />
        <logger name="*" levels="Error,Fatal" writeTo="errorsFile" />
        <logger name="*" level="Warn" writeTo="warningsFile" />

        <logger name="*" writeTo="loggerFile,console" />
    </rules>
</nlog>